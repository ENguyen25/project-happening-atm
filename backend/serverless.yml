service: gov-agenda-notifier

provider:
  name: aws
  runtime: nodejs12.x
  region: us-west-1
  environment:
    IS_LAMBDA: true
    NODE_ENV: development

    TWILIO_AUTH_TOKEN: ${self:custom.TWILIO.AUTH_TOKEN} 
    TWILIO_ACCOUNT_SID: ${self:custom.TWILIO.ACCOUNT_SID} 
    TWILIO_PHONE_NUMBER: ${self:custom.TWILIO.PHONE_NUMBER} 

    PGHOST: ${self:custom.POSTGRESQL.HOST} 
    PGPORT: ${self:custom.POSTGRESQL.PORT}
    PGUSER: ${self:custom.POSTGRESQL.USER}
    PGPASSWORD: ${self:custom.POSTGRESQL.PASS}
    PGDATABASE: ${self:custom.POSTGRESQL.DBNAME}

custom:
  TWILIO:
    AUTH_TOKEN: ${file(./secrets.json):TWILIO_AUTH_TOKEN}
    ACCOUNT_SID: ${file(./secrets.json):TWILIO_ACCOUNT_SID}
    PHONE_NUMBER: ${file(./secrets.json):TWILIO_PHONE_NUMBER}
  POSTGRESQL:
    USER: ${file(./secrets.json):PGUSER}
    PASS: ${file(./secrets.json):PGPASSWORD}
    DBNAME: ${file(./secrets.json):PGDATABASE}
    PORT:
      Fn::GetAtt: [PostgreSqlRDSInstance, Endpoint.Port]
    HOST:
      Fn::GetAtt: [PostgreSqlRDSInstance, Endpoint.Address]

plugins:
  - serverless-pseudo-parameters
resources:
  Resources:
    PostgreSqlRDSInstance: 
      Type: AWS::RDS::DBInstance
      Properties:
        Engine: postgres
        AllocatedStorage: 20
        PubliclyAccessible: true
        DBInstanceClass: db.t2.micro
        DBName: ${self:custom.POSTGRESQL.DBNAME}
        MasterUsername: ${self:custom.POSTGRESQL.USER}
        MasterUserPassword: ${self:custom.POSTGRESQL.PASS}

functions:
  graphql:
    handler: handler.graphqlHandler
    events:
    - http:
        path: graphql
        method: post
        cors: true
    - http:
        path: graphql
        method: get
        cors: true